import re

class OP:
    def __init__(self, l, r):
        self.l = l
        self.r = r

def main():
    op = []
    pr = []
    n = int(input("Enter the Number of Values: "))
    
    for i in range(n):
        l = input("left: ")
        r = input("right: ")
        op.append(OP(l, r))
    
    print("Intermediate Code")
    for o in op:
        print(f"{o.l} = {o.r}")
    
    z = 0
    for i in range(n-1):
        temp = op[i].l
        for j in range(n):
            if temp in op[j].r:
                pr.append(OP(op[i].l, op[i].r))
                z += 1
    
    pr.append(OP(op[n-1].l, op[n-1].r))
    z += 1
    
    print("\nAfter Dead Code Elimination")
    for p in pr:
        print(f"{p.l} = {p.r}")
    
    for m in range(z):
        tem = pr[m].r
        for j in range(m+1, z):
            if pr[j].r in tem:
                t = pr[j].l
                pr[j].l = pr[m].l
                for i in range(z):
                    if t in pr[i].r:
                        a = pr[i].r.index(t)
                        print(f"pos: {a}")
                        pr[i].r = pr[i].r[:a] + pr[m].l + pr[i].r[a+1:]
    
    print("Eliminate Common Expression")
    for p in pr:
        print(f"{p.l} = {p.r}")
    
    for i in range(z):
        for j in range(i+1, z):
            if pr[i].l == pr[j].l and pr[i].r == pr[j].r:
                pr[i].l = None
    
    print("Optimized Code")
    for p in pr:
        if p.l is not None:
            print(f"{p.l} = {p.r}")

if __name__ == "__main__":
    main()
